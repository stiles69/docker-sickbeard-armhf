2018-10-04 03:24:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename 2010.National.Spelling.Bee.HDTV.XviD-FQM into a valid episode
2018-10-04 03:24:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: 2010.National.Spelling.Bee.HDTV.XviD-FQM
2018-10-04 03:24:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 16.And.Pregnant.S04E09.Sarah.HDTV.XviD-CRiMSON
2018-10-04 03:24:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 16 And Pregnant
2018-10-04 03:24:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'16.And.Pregnant']
2018-10-04 03:24:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [usenet_crawler] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['16.And.Pregnant.S04E09.Sarah.HDTV.XviD-CRiMSON', 4, '|9|', 0, 0, 'https://www.usenet-crawler.com/getnzb/55852fdae54ed4c84016ee3c31f33de4.nzb&i=411608&r=e350339fe12a3e94948948e570c13b84', 1538641473, 1]
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.A-Team.Die.Versunkene.Stadt.1.S03E02.DVD.2010.XviD
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The A-Team Die Versunkene Stadt 1
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.A-Team.Die.Versunkene.Stadt.1']
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [usenet_crawler] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.A-Team.Die.Versunkene.Stadt.1.S03E02.DVD.2010.XviD', 3, '|2|', 0, 0, 'https://www.usenet-crawler.com/getnzb/0e6c6d496f73e7fc9e0be861aa98eec0.nzb&i=411608&r=e350339fe12a3e94948948e570c13b84', 1538641474, 32768]
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 15.bodacious.bbqs.dsr.xvid-walmart
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No series name retrieved from 15.bodacious.bbqs.dsr.xvid-walmart, unable to cache it
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Carnivale.S01E11.WS.DVDRip.XviD-RiVER
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Carnivale
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Carnivale']
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [usenet_crawler] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Carnivale.S01E11.WS.DVDRip.XviD-RiVER', 1, '|11|', 0, 0, 'https://www.usenet-crawler.com/getnzb/1709884b59c2da3e907feb0eb2209ff4.nzb&i=411608&r=e350339fe12a3e94948948e570c13b84', 1538641474, 2]
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 1000.Ways.To.Die.S05E17.HDTV.XviD-aAF
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 1000 Ways To Die
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'1000.Ways.To.Die']
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [usenet_crawler] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['1000.Ways.To.Die.S05E17.HDTV.XviD-aAF', 5, '|17|', 0, 0, 'https://www.usenet-crawler.com/getnzb/d2f0e8ea86042864174ebfdf7e9cba99.nzb&i=411608&r=e350339fe12a3e94948948e570c13b84', 1538641474, 1]
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM [usenet_crawler]
2018-10-04 03:24:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Usenet-4all.Info---SERIEN-XVID--HolzEisen.3.7
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: V.2009.X64.WEB-DL.S02E10-StreamTeam
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Cake.Boss.S05E01.Fitting.In.Fed.Up.First.Birthday.DSR.XviD-pwe
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Sisters.2006.Hdtv.Ac3-2.0.Xvid-sic
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Carnivale.S01E04.WS.DVDRip.XviD-RiVER
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Carnivale.S01E01.WS.DVDRip.XviD-RiVER
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Carnivale.S01E02.WS.DVDRip.XviD-RiVER
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Carnivale.S01E03.WS.DVDRip.XviD-RiVER
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Carnivale.S01E05.WS.DVDRip.XviD-RiVER
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Carnivale.S01E06.WS.DVDRip.XviD-RiVER
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Carnivale.S01E07.WS.DVDRip.XviD-RiVER
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Carnivale.S01E08.WS.DVDRip.XviD-RiVER
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 12.Oz.Mouse.Volume.1.DVDRip.XviD-aAF
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.450.Class.Round.6.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.450.Class.Round.12.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1.HEROs.2006.Vol.4.The.Finals.EXTRAS.DVDRiP.XViD-BOV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Invalid scene release: 1.HEROs.2006.Vol.4.The.Finals.EXTRAS.DVDRiP.XViD-BOV contains (dvd)?extras, ignoring it
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1.HEROs.2007.Vol.1.The.Road.To.Victory.DVDRiP.XViD-BOV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.450.Class.Round.10.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.250.Class.Round.9.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.450.Class.Round.2.HDTV.XviD.REPACK-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 18.To.Life.S01D1.NTSC.DVDR-ToF
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1.HEROs.2006.Vol.4.The.Finals.READ.NFO.DVDRiP.XViD-BOV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1.MFC.Russia.Vs.The.World.5.2003.DVDRip.XviD-BOV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 8.Out.Of.10.Cats.S05E02.HDTV.XviD-ABC.part01
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1plod.S05E31.x264-tahimba
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 12.Angry.Men.1957.HDTV.DD2.0.x264-Krispy
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1.MFC.Russia.Vs.The.World.1.2001.DVDRip.XviD-BOV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 16.And.Pregnant.S03E13.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.250.Class.Round.1.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.250.Class.Round.4.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.250.Class.Round.5.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.450.Class.Round.5.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1.Challenge.31.Monson.Vs.Oleinik.HDTV.x264-FTR
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1066-The.Battle.For.Middle.Earth.Part.1.WS.PDTV.XviD-SFM
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1066-The.Battle.For.Middle.Earth.Part.2.WS.PDTV.XviD-SFM
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.250.Class.Round.2.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.250.Class.Round.7.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.250.Class.Round.8.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.450.Class.Round.3.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.450.Class.Round.8.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.U.S.Outdoor.Nationals.450.Class.Round.2.HDTV.XviD-MiRAGETV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 15.Kids.And.Counting.S01E01.HDTV.XviD-C4TV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 101.Ways.To.Leave.A.Gameshow.S01E06.WS.PDTV.XviD-PVR
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 15.Kids.And.Counting.S01E02.HDTV.XviD-C4TV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2020.2009.12.29.The.Blind.Side.HDTV.XviD-2WiRE
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 16.And.Pregnant.S04E13.Reunion.Life.After.Labor.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 10.O.Clock.Live.S01E15.HDTV.XviD-C4TV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 101.Ways.To.Leave.A.Gameshow.S01E01.WS.PDTV.XviD.REPACK-PVR
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 101.Ways.To.Leave.A.Gameshow.S01E08.WS.PDTV.XviD-FTP
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1000.Ways.To.Die.S02E06.WS.PDTV.XviD-aAF
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2009.Grafton.To.Inverell.2009.09.20.WS.PDTV.XviD-HDCP
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 10.O.Clock.Live.S01E13.HDTV.XviD-C4TV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 10.OClock.Live.S01E04.WS.PDTV.XviD-C4TV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 10.Oclock.Live.S01E08.WS.PDTV.XviD-BARGE
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 16.And.Pregnant.S03E06.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 16.And.Pregnant.S03E11.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 10.OClock.Live.S01E02.WS.PDTV.XviD-PVR
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 20thC.FOX.HOUR.208-fixed
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 10.Oclock.Live.S01E03.WS.PDTV.XviD-PVR
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 2020.US.2011.05.06.Kill.Shot.Bin.Ladens.Death.HDTV.XviD-sHoTV
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 10.Oclock.Live.S01E03.REPACK.WS.PDTV.XviD-PVR
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 16.And.Pregnant.S04E01.Mackenzie.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 16.And.Pregnant.S04E06.Jordan.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 16.And.Pregnant.S04E10.Sabrina.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 16.And.Pregnant.S04E11.Devon.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 10.Oclock.Live.S02E02.HDTV.XviD-FTP
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 16.And.Pregnant.S04E02.Katie.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 19.Kids.And.Counting.S04E15.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 16.And.Pregnant.S04E09.Sarah.HDTV.XviD-CRiMSON
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.A-Team.Die.Versunkene.Stadt.1.S03E02.DVD.2010.XviD
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Carnivale.S01E11.WS.DVDRip.XviD-RiVER
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 1000.Ways.To.Die.S05E17.HDTV.XviD-aAF
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT time FROM lastUpdate WHERE provider = ? with args ['sick_beard_index']
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Sick Beard Index cache update URL: http://lolo.sickbeard.com/api?t=tvsearch&cat=5030%2C5040
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: UPDATE lastUpdate SET time = ? WHERE provider = ? with args [1538641475, 'sick_beard_index']
2018-10-04 03:24:35 INFO     SEARCHQUEUE-RSS-SEARCH :: Clearing Sick Beard Index cache and updating with new information
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: DELETE FROM [sick_beard_index] WHERE 1
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.with.Trevor.Noah.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show with Trevor Noah
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show.with.Trevor.Noah']
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.with.Trevor.Noah.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/451adc57ca4166fbc7eeb362a629b16f.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641475, 64]
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: VICE.News.Tonight.2018.10.03.720p.WEB-DL.AAC2.0.H.264-doosh
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of VICE News Tonight
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'VICE.News.Tonight']
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['VICE.News.Tonight.2018.10.03.720p.WEB-DL.AAC2.0.H.264-doosh', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/3231581173bb92266597b318cc05d8e5.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641476, 32]
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 9-1-1.S02E03.Help.Is.Not.Coming.720p.AMZN.WEB-DL.DDP5
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 9-1-1
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'9-1-1']
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['9-1-1.S02E03.Help.Is.Not.Coming.720p.AMZN.WEB-DL.DDP5', 2, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/5f3e709614ba6b1f59f4b67c94110fe7.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641476, 32]
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: FBI.S01E02.HDTV.x264-SVA-postbot
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of FBI
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'FBI']
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['FBI.S01E02.HDTV.x264-SVA-postbot', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/3c7a117f9c9104f7bb7ae839d2d59e75.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641476, 1]
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bull.2016.S03E02.HDTV.x264-KILLERS
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bull 2016
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bull.2016']
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bull.2016.S03E02.HDTV.x264-KILLERS', 3, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/c0345b473f948eefd1bfb7d8336e3e22.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641476, 1]
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Late.Night.With.Seth.Meyers.2018.10.02.Eric.McCormack.Sean.Casey.&.Kevin.Millar.Amanda.Litman.1080p.HULU.WEB-DL
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Late Night With Seth Meyers
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Late.Night.With.Seth.Meyers']
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Late.Night.With.Seth.Meyers.2018.10.02.Eric.McCormack.Sean.Casey.&.Kevin.Millar.Amanda.Litman.1080p.HULU.WEB-DL', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/c2a57d7324f03690aa97c5794ff111bd.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641477, 64]
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jimmy.Kimmel.Live.2018.10.02.Sarah.Paulson.Stormy.Daniels.Kacey.Musgraves.720p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jimmy Kimmel Live
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jimmy.Kimmel.Live']
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jimmy.Kimmel.Live.2018.10.02.Sarah.Paulson.Stormy.Daniels.Kacey.Musgraves.720p.HULU.WEB-DL.AAC2.0.H.264-monkee', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/e18f5f2dba3e94757dcf49c7960dd9af.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641477, 32]
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: NCIS.S16E02.Love.Thy.Neighbor.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of NCIS
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'NCIS']
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['NCIS.S16E02.Love.Thy.Neighbor.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 16, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/3b8b92e8384ccfc1fdb4390ed3982fcb.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641477, 64]
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: NCIS.S16E02.Love.Thy.Neighbor.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of NCIS
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'NCIS']
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['NCIS.S16E02.Love.Thy.Neighbor.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 16, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/39848a9f18021362d444457ae9550e63.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641477, 32]
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lethal.Weapon.S03E02.Need.to.Know.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lethal Weapon
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lethal.Weapon']
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lethal.Weapon.S03E02.Need.to.Know.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 3, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/6c7639425c72bdfd4616a859732ad2ab.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641477, 64]
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lethal.Weapon.S03E02.Need.to.Know.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lethal Weapon
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lethal.Weapon']
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lethal.Weapon.S03E02.Need.to.Know.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 3, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/755f01bf5cdb026d6f9cddf14e7a3e6a.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641478, 32]
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: FBI.S01E02.Green.Birds.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of FBI
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'FBI']
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['FBI.S01E02.Green.Birds.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/781524be2364ce1f8306a925746c3962.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641478, 64]
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: FBI.S01E02.Green.Birds.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of FBI
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'FBI']
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['FBI.S01E02.Green.Birds.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/61971bf95d0b6faf9702fc8d1c908e94.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641478, 32]
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 9-1-1.S02E03.Help.Is.Not.Coming.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 9-1-1
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'9-1-1']
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['9-1-1.S02E03.Help.Is.Not.Coming.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 2, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9c7662d08d8ab4cf5f2cabf943fff7a3.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641478, 64]
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: VICE.News.Tonight.2018.10.02.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of VICE News Tonight
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'VICE.News.Tonight']
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['VICE.News.Tonight.2018.10.02.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/97ab00b9a76062357fa96d0316f7f9c3.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641479, 64]
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 9-1-1.S02E03.Help.Is.Not.Coming.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 9-1-1
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'9-1-1']
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['9-1-1.S02E03.Help.Is.Not.Coming.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 2, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/006590d9bf11ec4e483a86928e515e65.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641479, 32]
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.with.Trevor.Noah.2018.10.02.Lester.Holt.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show with Trevor Noah
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show.with.Trevor.Noah']
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.with.Trevor.Noah.2018.10.02.Lester.Holt.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/cedcf2f5242706b05f740135baa3dd72.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641479, 64]
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Jim.Jefferies.Show.S02E23.Americas.Racist.Criminal.Justice.System.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Jim Jefferies Show
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Jim.Jefferies.Show']
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Jim.Jefferies.Show.S02E23.Americas.Racist.Criminal.Justice.System.1080p.CC.WEB-DL.AAC2.0.x264-monkee', 2, '|23|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9d37a6b97ed21c0e93b56452f329a494.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641479, 64]
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Resident.S02E02.The.Prince.and.The.Pauper.1080p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS
2018-10-04 03:24:39 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Resident
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Resident']
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Resident.S02E02.The.Prince.and.The.Pauper.1080p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS', 2, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/28d8f99ca45d42b208603bffbfbf7cc6.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641480, 64]
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Resident.S02E02.The.Prince.and.The.Pauper.720p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Resident
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Resident']
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Resident.S02E02.The.Prince.and.The.Pauper.720p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS', 2, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/596985bbb97d94ac262253464061b105.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641480, 32]
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bull.2016.S03E02.Jury.Duty.1080p.AMZN.WEB-DL
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bull 2016
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bull.2016']
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bull.2016.S03E02.Jury.Duty.1080p.AMZN.WEB-DL', 3, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8a7aa376fe9b50d21a2de52eccc1fd9c.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641480, 64]
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bull.2016.S03E02.Jury.Duty.720p.AMZN.WEB-DL
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bull 2016
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bull.2016']
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bull.2016.S03E02.Jury.Duty.720p.AMZN.WEB-DL', 3, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/d95f1d690b4a616b18a0f11fcea51387.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641480, 32]
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: This.Is.Us.S03E02.720p.HDTV.x264.AVS.UKSubs
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of This Is Us
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'This.Is.Us']
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:40 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['This.Is.Us.S03E02.720p.HDTV.x264.AVS.UKSubs', 3, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/30e86a18c8e5f66a01b7f8ad8b227935.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641480, 4]
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: YOU.2018.S01E04.The.Captain.1080p.WEB-DL.DD5.1.H.264-PfXCPI
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of YOU 2018
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'YOU.2018']
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['YOU.2018.S01E04.The.Captain.1080p.WEB-DL.DD5.1.H.264-PfXCPI', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ece89a461ebcc5b9abe4b4250157150a.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641481, 64]
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: VICE.News.Tonight.2018.10.02.720p.WEB-DL.AAC2.0.H.264-doosh
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of VICE News Tonight
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'VICE.News.Tonight']
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['VICE.News.Tonight.2018.10.02.720p.WEB-DL.AAC2.0.H.264-doosh', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/fc70e532516b95fd19c8ea68fe853e91.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641481, 32]
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: ties.that.bind.s01e01.dsr.x264-w4f
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of ties that bind
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'ties.that.bind']
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['ties.that.bind.s01e01.dsr.x264-w4f', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/5eba514ab65f68a7341033c8883a753b.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641481, 1]
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 9-1-1.s02e03.1080p.web.x264.tbs.UKSubs
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 9-1-1
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'9-1-1']
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['9-1-1.s02e03.1080p.web.x264.tbs.UKSubs', 2, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/d94dbb2168692567a4d6f12d7b0c39c2.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641481, 32768]
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: black.earth.rising.s01e04.1080p.hdtv.x264.mtb.UKSubs
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of black earth rising
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'black.earth.rising']
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['black.earth.rising.s01e04.1080p.hdtv.x264.mtb.UKSubs', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/fd8d2ac4b4ea2630b8b564bdca65cb4a.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641481, 16]
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Press.S01E04.720p.HDTV.x264-MTB
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Press
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Press']
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Press.S01E04.720p.HDTV.x264-MTB', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e9d0637eabe36538e42ee5a2e3420ed9.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641482, 4]
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Late.Night.With.Seth.Meyers.2018.10.01.Kenan.Thompson.Jameela.Jamil.Mean.Girls.Performance.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Late Night With Seth Meyers
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Late.Night.With.Seth.Meyers']
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Late.Night.With.Seth.Meyers.2018.10.01.Kenan.Thompson.Jameela.Jamil.Mean.Girls.Performance.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/6c1903c7bb0a941b493be0730735ea37.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641482, 64]
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Real.Housewives.of.Orange.County.S13E11.8.5.Minutes.to.Success.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Real Housewives of Orange County
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Real.Housewives.of.Orange.County']
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Real.Housewives.of.Orange.County.S13E11.8.5.Minutes.to.Success.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 13, '|11|', 0, 0, 'http://lolo.sickbeard.com/getnzb/23599a99f89dee8b36f2c94634524d38.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641482, 64]
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Better.Call.Saul.S04E09.Wiedersehen.720p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Better Call Saul
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Better.Call.Saul']
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Better.Call.Saul.S04E09.Wiedersehen.720p.NF.WEB-DL.DDP5.1.x264-TOMMY', 4, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/718eed720ff23185daaa54a10a16c5ef.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641482, 32]
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Better.Call.Saul.S04E09.Wiedersehen.1080p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Better Call Saul
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Better.Call.Saul']
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:42 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Better.Call.Saul.S04E09.Wiedersehen.1080p.NF.WEB-DL.DDP5.1.x264-TOMMY', 4, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e0daa08203efb4a4897ae1e97a80395f.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641482, 64]
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Neighborhood.S01E01.Pilot.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Neighborhood
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Neighborhood']
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Neighborhood.S01E01.Pilot.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/108136f806aa6f990df4a6d2a6abefe5.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641483, 32]
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Neighborhood.S01E01.Pilot.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Neighborhood
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Neighborhood']
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Neighborhood.S01E01.Pilot.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/84bb027608bec8d168c09859e9e53f01.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641483, 64]
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Magnum.P.I.S01E02.From.the.Head.Down.720p.AMZN.WEBRip.DDP5.1.x264-NTb
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Magnum P I
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Magnum.P.I']
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Magnum.P.I.S01E02.From.the.Head.Down.720p.AMZN.WEBRip.DDP5.1.x264-NTb', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e641e790d2e7681e0d8e00b198552a23.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641483, 32]
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: you.s01e04.the.captain.720p.hdtv.x264-w4f
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of you
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'you']
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['you.s01e04.the.captain.720p.hdtv.x264-w4f', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/096381a509825bf19edef219f5a4157c.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641483, 4]
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: VICE.News.Tonight.2018.10.01.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of VICE News Tonight
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'VICE.News.Tonight']
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['VICE.News.Tonight.2018.10.01.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/4a2e170fa199f5bb1d9aa85fd23c804c.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641483, 64]
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.with.Trevor.Noah.2018.10.01.Carol.Anderson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show with Trevor Noah
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show.with.Trevor.Noah']
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.with.Trevor.Noah.2018.10.01.Carol.Anderson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/3f226765e234f5a503ef4f1dcc2404ad.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641484, 64]
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jimmy.Kimmel.Live.2018.10.01.Henry.Winkler.Jenny.Slate.Lindsey.Buckingham.720p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jimmy Kimmel Live
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jimmy.Kimmel.Live']
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jimmy.Kimmel.Live.2018.10.01.Henry.Winkler.Jenny.Slate.Lindsey.Buckingham.720p.HULU.WEB-DL.AAC2.0.H.264-monkee', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/7d5c1da5c84ae2f0ac5918f5aa2b8df8.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641484, 32]
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Magnum.P.I.S01E02.From.the.Head.Down.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Magnum P I
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Magnum.P.I']
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Magnum.P.I.S01E02.From.the.Head.Down.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/663a18b1f465d9b444abd671031edf2a.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641484, 64]
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Magnum.P.I.S01E02.From.the.Head.Down.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Magnum P I
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Magnum.P.I']
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Magnum.P.I.S01E02.From.the.Head.Down.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/c10348a0bdf83b9dd7b5b690c6699cb7.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641484, 32]
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hawaii.Five-0.S09E01.Ka.owiliokai.1080p.AMZN.WEB-DL
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hawaii Five-0
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hawaii.Five-0']
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hawaii.Five-0.S09E01.Ka.owiliokai.1080p.AMZN.WEB-DL', 9, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/31bda6a6bfe7cb1757d2c3ec03dd436c.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641484, 64]
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: NCIS.Los.Angeles.S10E01.1080p.AMZN.WEB-DL.DDP5.1.H.264-ViSUM
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of NCIS Los Angeles
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'NCIS.Los.Angeles']
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['NCIS.Los.Angeles.S10E01.1080p.AMZN.WEB-DL.DDP5.1.H.264-ViSUM', 10, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/09313e19467b38642ada10a6c13148ea.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641484, 64]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Family.Guy.S17E01.Married.with.Cancer.1080p.AMZN.WEB-DL
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Family Guy
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Family.Guy']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Family.Guy.S17E01.Married.with.Cancer.1080p.AMZN.WEB-DL', 17, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/746ac284fc61143792156ccccce1d800.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 64]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ballers.S04E08.The.Devil.You.Know.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ballers
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ballers']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ballers.S04E08.The.Devil.You.Know.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 4, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/f4458fafce7b9291fc39f1010de5f025.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 64]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ballers.S04E08.The.Devil.You.Know.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ballers
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ballers']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ballers.S04E08.The.Devil.You.Know.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 4, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/33b31fe7ed3be299c05dfae935880102.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 32]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: VICE.News.Tonight.2018.10.01.720p.WEB-DL.AAC2.0.H.264-doosh
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of VICE News Tonight
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'VICE.News.Tonight']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['VICE.News.Tonight.2018.10.01.720p.WEB-DL.AAC2.0.H.264-doosh', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/5a975345465075802e0e75aefdfede0f.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 32]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Wanderlust.S01E04.720p.HDTV.x264-ORGANiC
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Wanderlust
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Wanderlust']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Wanderlust.S01E04.720p.HDTV.x264-ORGANiC', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/3d577d0ccceb3a2e4fb51972b3c583bb.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 4]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jamie.Cooks.Italy.S01E08.Piedmont.720p.AMZN.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jamie Cooks Italy
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jamie.Cooks.Italy']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jamie.Cooks.Italy.S01E08.Piedmont.720p.AMZN.WEB-DL.AAC2.0.H.264-monkee', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ccc8f77bb29d15d8e1129497630b5f73.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 32]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jamie.Cooks.Italy.S01E08.Piedmont.1080p.AMZN.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jamie Cooks Italy
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jamie.Cooks.Italy']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jamie.Cooks.Italy.S01E08.Piedmont.1080p.AMZN.WEB-DL.AAC2.0.H.264-monkee', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/cb73ad6e6b80ac9faf87edbbb6f6c588.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 64]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: James.Martins.Saturday.Morning.S02E04.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of James Martins Saturday Morning
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'James.Martins.Saturday.Morning']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['James.Martins.Saturday.Morning.S02E04.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee', 2, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/63d8f3aeb197c5cdc95dcb773e313a31.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 64]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 60.Minutes.S51E01.September.30.2018.1080p.AMZN.WEB-DL.DDP5.1.H.264-monkee
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 60 Minutes
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'60.Minutes']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['60.Minutes.S51E01.September.30.2018.1080p.AMZN.WEB-DL.DDP5.1.H.264-monkee', 51, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/6324d1e68d9722ccd464bde5f56e5e23.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 64]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: James.Martins.Saturday.Morning.S02E04.720p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of James Martins Saturday Morning
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'James.Martins.Saturday.Morning']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['James.Martins.Saturday.Morning.S02E04.720p.AMZN.WEB-DL.DDP2.0.H.264-monkee', 2, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/954aa3568010b8d3ea818c271b0a5e5a.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 32]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Last.Week.Tonight.with.John.Oliver.S05E24.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Last Week Tonight with John Oliver
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Last.Week.Tonight.with.John.Oliver']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Last.Week.Tonight.with.John.Oliver.S05E24.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee', 5, '|24|', 0, 0, 'http://lolo.sickbeard.com/getnzb/7b3d8c49578281741963ca92e1d3cb55.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 64]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Vanity.Fair.S01E04.720p.HDTV.x264-ORGANiC
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Vanity Fair
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Vanity.Fair']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Vanity.Fair.S01E04.720p.HDTV.x264-ORGANiC', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/828ab75a2c75bad3ac16b16d09553cde.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 4]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Good.Place.S03E01.Episode.1.720p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Good Place
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Good.Place']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Good.Place.S03E01.Episode.1.720p.NF.WEB-DL.DDP5.1.x264-TOMMY', 3, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e22e4a8c9d4640b9728844197948e86d.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 32]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Good.Place.S03E01.Episode.1.1080p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Good Place
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Good.Place']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Good.Place.S03E01.Episode.1.1080p.NF.WEB-DL.DDP5.1.x264-TOMMY', 3, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b25aaa58631c7c94b96b617fe7da091b.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 64]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: the.cry.s01e01.1080p.hdtv.x264.mtb.UKSubs
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of the cry
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'the.cry']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['the.cry.s01e01.1080p.hdtv.x264.mtb.UKSubs', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b0b5dc65cb8435b51b6d743c4aca84eb.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 16]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: NCIS.Los.Angeles.S10E01.1080p.AMZN.WEB-DL.DDP5.1.H.264-ViSUM
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: NCIS.Los.Angeles.S10E01.1080p.AMZN.WEB-DL.DDP5.1.H.264-ViSUM
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of NCIS Los Angeles
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'NCIS.Los.Angeles']
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['NCIS.Los.Angeles.S10E01.1080p.AMZN.WEB-DL.DDP5.1.H.264-ViSUM', 10, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8724339197adea79d4d7a70a4d099ed2.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641485, 64]
2018-10-04 03:24:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Circus.S03E09.Judgment.Day.720p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Circus
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Circus']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Circus.S03E09.Judgment.Day.720p.AMZN.WEB-DL.DDP2.0.H.264-NTb', 3, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/548b6de4a10b9751924795e4b17c7979.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 32]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Circus.S03E09.Judgment.Day.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Circus
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Circus']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Circus.S03E09.Judgment.Day.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb', 3, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/afa5dc480fa4ecbe2823d84f94cce7b7.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chesapeake.Shores.S03E09.Episode.9.720p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chesapeake Shores
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chesapeake.Shores']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chesapeake.Shores.S03E09.Episode.9.720p.NF.WEB-DL.DDP5.1.x264-TOMMY', 3, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/48f4eadaa496f9940e026142df697f21.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 32]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chesapeake.Shores.S03E09.Episode.9.1080p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chesapeake Shores
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chesapeake.Shores']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chesapeake.Shores.S03E09.Episode.9.1080p.NF.WEB-DL.DDP5.1.x264-TOMMY', 3, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9663cf356397a25b84f8f6b631e08e2e.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: James.Martins.Saturday.Morning.S02E03.720p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of James Martins Saturday Morning
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'James.Martins.Saturday.Morning']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['James.Martins.Saturday.Morning.S02E03.720p.AMZN.WEB-DL.DDP2.0.H.264-monkee', 2, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9246ac2bd668a2ad77a86417e6907696.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 32]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Only.Way.Is.Essex.S23E05.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Only Way Is Essex
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Only.Way.Is.Essex']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Only.Way.Is.Essex.S23E05.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb', 23, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/4343a6a5d649a7e4b326a59ee2eb98db.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: James.Martins.Saturday.Morning.S02E03.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of James Martins Saturday Morning
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'James.Martins.Saturday.Morning']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['James.Martins.Saturday.Morning.S02E03.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee', 2, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/f0c82b2b21a41297ccb194b233336727.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Last.Week.Tonight.with.John.Oliver.S05E24.720p.WEB-DL.AAC2.0.H.264-doosh
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Last Week Tonight with John Oliver
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Last.Week.Tonight.with.John.Oliver']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Last.Week.Tonight.with.John.Oliver.S05E24.720p.WEB-DL.AAC2.0.H.264-doosh', 5, '|24|', 0, 0, 'http://lolo.sickbeard.com/getnzb/209a23a963364c681469727460177345.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 32]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Deuce.S02E04.What.Big.Ideas.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Deuce
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Deuce']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Deuce.S02E04.What.Big.Ideas.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 2, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b59075fe1ed601194ea43c794f9c250b.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E05.Why.Is.Joshs.Ex-Girlfriend.Eating.Carbs.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E05.Why.Is.Joshs.Ex-Girlfriend.Eating.Carbs.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/76ff619a9b8784188709187e07d1069a.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S01E01.Josh.Just.Happens.to.Live.Here.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S01E01.Josh.Just.Happens.to.Live.Here.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/68f59641b0f5996b4102665b35a142c6.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E13.Can.Josh.Take.a.Leap.of.Faith.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E13.Can.Josh.Take.a.Leap.of.Faith.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|13|', 0, 0, 'http://lolo.sickbeard.com/getnzb/25ed9ddc41ca8f4496a225bab3264159.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E12.Is.Josh.Free.in.Two.Weeks.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E12.Is.Josh.Free.in.Two.Weeks.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|12|', 0, 0, 'http://lolo.sickbeard.com/getnzb/2fe1e8c883b807606d6f400157d2eb0f.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E11.Josh.Is.the.Man.of.My.Dreams.Right.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E11.Josh.Is.the.Man.of.My.Dreams.Right.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|11|', 0, 0, 'http://lolo.sickbeard.com/getnzb/657bc8e9349d8529bd7e4288524e43f5.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E10.Will.Scarsdale.Like.Joshs.Shayna.Punim.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E10.Will.Scarsdale.Like.Joshs.Shayna.Punim.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|10|', 0, 0, 'http://lolo.sickbeard.com/getnzb/618a35ecc958912ce6cea36a39b39645.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E09.When.Do.I.Get.to.Spend.Time.with.Josh.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E09.When.Do.I.Get.to.Spend.Time.with.Josh.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/f86b33df5f05d6f3d2496822b9e82d9a.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E08.Who.Is.Joshs.Soup.Fairy.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E08.Who.Is.Joshs.Soup.Fairy.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/f7a04c64bd01c4e478f6e16759f9dfbf.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E07.Whos.the.Cool.Girl.Josh.Is.Dating.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E07.Whos.the.Cool.Girl.Josh.Is.Dating.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/3cd49872a91a2b47064571bed149e051.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E06.Who.Needs.Josh.When.You.Have.a.Girl.Group.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E06.Who.Needs.Josh.When.You.Have.a.Girl.Group.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/7e9444b7cd187f35151801275c2a4d12.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641486, 64]
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E04.When.Will.Josh.and.His.Friend.Leave.Me.Alone.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E04.When.Will.Josh.and.His.Friend.Leave.Me.Alone.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/3da4fcd8132562b68b51bae3bdcb93b7.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641487, 64]
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E03.All.Signs.Point.to.Josh.or.Is.It.Joshs.Friend.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E03.All.Signs.Point.to.Josh.or.Is.It.Joshs.Friend.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/bbb54b70521f26ee5d1c77b0dcecf8c2.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641487, 64]
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E02.When.Will.Josh.See.How.Cool.I.Am.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E02.When.Will.Josh.See.How.Cool.I.Am.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e116a7019b80752a60b5a92ac26339d1.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641487, 64]
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crazy.Ex-Girlfriend.S02E01.Where.Is.Joshs.Friend.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crazy Ex-Girlfriend
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crazy.Ex-Girlfriend']
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:47 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crazy.Ex-Girlfriend.S02E01.Where.Is.Joshs.Friend.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio', 2, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/4158544fc19e0822d216c75073dcc1c9.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641487, 64]
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Deuce.S02E04.What.Big.Ideas.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Deuce
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Deuce']
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Deuce.S02E04.What.Big.Ideas.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 2, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8644d9748eae7ffc07003a6937c27143.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641488, 32]
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Jim.Jefferies.Show.S02E22.Republicans.Stand.By.Brett.Kavanaugh.720p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Jim Jefferies Show
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Jim.Jefferies.Show']
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Jim.Jefferies.Show.S02E22.Republicans.Stand.By.Brett.Kavanaugh.720p.AMZN.WEB-DL.DDP2.0.H.264-NTb', 2, '|22|', 0, 0, 'http://lolo.sickbeard.com/getnzb/552f29463527e835cdfbe822de14b360.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641488, 32]
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Jim.Jefferies.Show.S02E22.Republicans.Stand.By.Brett.Kavanaugh.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Jim Jefferies Show
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Jim.Jefferies.Show']
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Jim.Jefferies.Show.S02E22.Republicans.Stand.By.Brett.Kavanaugh.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb', 2, '|22|', 0, 0, 'http://lolo.sickbeard.com/getnzb/19150899d786fca9af35fff4cd9a5ce0.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641488, 64]
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Imitation.Game.S01E05.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Imitation Game
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Imitation.Game']
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Imitation.Game.S01E05.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/52e4117175033e8fb86cb89905d83b23.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641488, 64]
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: South.Park.S22E01.Dead.Kids.720p.AMZN.WEBRip.DDP2.0.x264-NTb
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of South Park
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'South.Park']
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 75897, using that
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['South.Park.S22E01.Dead.Kids.720p.AMZN.WEBRip.DDP2.0.x264-NTb', 22, '|1|', 0, 75897, 'http://lolo.sickbeard.com/getnzb/e55a2056cbea35f4af49665371c64188.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641488, 32]
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: South.Park.S22E01.Dead.Kids.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of South Park
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'South.Park']
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 75897, using that
2018-10-04 03:24:48 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['South.Park.S22E01.Dead.Kids.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb', 22, '|1|', 0, 75897, 'http://lolo.sickbeard.com/getnzb/b1bcfd5eca58c951d008d4c242749629.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641488, 64]
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Shameless.US.S09E04.Do.Right.Vote.White.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Shameless US
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Shameless.US']
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Shameless.US.S09E04.Do.Right.Vote.White.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 9, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/63d4b0fd17cdb29d74ec7cd9aa91dc3d.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641489, 64]
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Crash.S01E01.Crash.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Crash
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Crash']
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Crash.S01E01.Crash.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/d1816b90db1db3e670cb3139f2d8ba99.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641489, 64]
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Blue.Bloods.S09E01.Playing.With.Fire.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Blue Bloods
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Blue.Bloods']
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Blue.Bloods.S09E01.Playing.With.Fire.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 9, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/851ba984a59fd76174b046cdc3f34548.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641489, 32]
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Blue.Bloods.S09E01.Playing.With.Fire.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Blue Bloods
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Blue.Bloods']
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Blue.Bloods.S09E01.Playing.With.Fire.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb', 9, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/57d4307cfa1c79d35b58dba5021d6909.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641489, 64]
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Back.to.Mine.Stay.For.Longer.S01E01.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Back to Mine Stay For Longer
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Back.to.Mine.Stay.For.Longer']
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:49 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Back.to.Mine.Stay.For.Longer.S01E01.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/37c1e74690fc9cd5ab53ad0c9f2d7579.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641489, 64]
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Back.To.Mine.S01E01.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Back To Mine
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Back.To.Mine']
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Back.To.Mine.S01E01.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e4ff8fdaebb83bfa3556bf5dfd5f273b.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641490, 64]
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Absolutely.Ascot.S01E02.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Absolutely Ascot
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Absolutely.Ascot']
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Absolutely.Ascot.S01E02.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/5c764c1d7ad57271482946103f221643.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641490, 64]
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Love.You.America.With.Sarah.Silverman.S01E14.18.Bill.Burr.720p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Love You America With Sarah Silverman
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Love.You.America.With.Sarah.Silverman']
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Love.You.America.With.Sarah.Silverman.S01E14.18.Bill.Burr.720p.HULU.WEB-DL.AAC2.0.H.264-monkee', 1, '|14|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ef698d3f91ab9c6c072e788c311b89b1.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641490, 32]
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Love.You.America.With.Sarah.Silverman.S01E14.Bill.Burr.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Love You America With Sarah Silverman
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Love.You.America.With.Sarah.Silverman']
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:50 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Love.You.America.With.Sarah.Silverman.S01E14.Bill.Burr.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee', 1, '|14|', 0, 0, 'http://lolo.sickbeard.com/getnzb/0f3816026c1e92b0c5a6d7e1dae82f2a.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641490, 64]
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Saturday.Night.Live.S44E01.Adam.Driver.Kanye.West.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Saturday Night Live
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Saturday.Night.Live']
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Saturday.Night.Live.S44E01.Adam.Driver.Kanye.West.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee', 44, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a69552107c882cabfe6b0bf8a38ad542.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641491, 64]
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Saturday.Night.Live.S44E01.Adam.Driver.Kanye.West.720p.WEB-DL.AAC2.0.H.264-doosh
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Saturday Night Live
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Saturday.Night.Live']
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Saturday.Night.Live.S44E01.Adam.Driver.Kanye.West.720p.WEB-DL.AAC2.0.H.264-doosh', 44, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9dabffbad55b85d80056c2a0b56c9fca.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1538641491, 32]
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM [sick_beard_index]
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Daily.Show.with.Trevor.Noah.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: VICE.News.Tonight.2018.10.03.720p.WEB-DL.AAC2.0.H.264-doosh
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 9-1-1.S02E03.Help.Is.Not.Coming.720p.AMZN.WEB-DL.DDP5
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: FBI.S01E02.HDTV.x264-SVA-postbot
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bull.2016.S03E02.HDTV.x264-KILLERS
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Late.Night.With.Seth.Meyers.2018.10.02.Eric.McCormack.Sean.Casey.&.Kevin.Millar.Amanda.Litman.1080p.HULU.WEB-DL
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Jimmy.Kimmel.Live.2018.10.02.Sarah.Paulson.Stormy.Daniels.Kacey.Musgraves.720p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: NCIS.S16E02.Love.Thy.Neighbor.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: NCIS.S16E02.Love.Thy.Neighbor.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lethal.Weapon.S03E02.Need.to.Know.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lethal.Weapon.S03E02.Need.to.Know.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: FBI.S01E02.Green.Birds.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: FBI.S01E02.Green.Birds.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 9-1-1.S02E03.Help.Is.Not.Coming.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: VICE.News.Tonight.2018.10.02.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 9-1-1.S02E03.Help.Is.Not.Coming.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Daily.Show.with.Trevor.Noah.2018.10.02.Lester.Holt.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Jim.Jefferies.Show.S02E23.Americas.Racist.Criminal.Justice.System.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Resident.S02E02.The.Prince.and.The.Pauper.1080p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Resident.S02E02.The.Prince.and.The.Pauper.720p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bull.2016.S03E02.Jury.Duty.1080p.AMZN.WEB-DL
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bull.2016.S03E02.Jury.Duty.720p.AMZN.WEB-DL
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: This.Is.Us.S03E02.720p.HDTV.x264.AVS.UKSubs
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: YOU.2018.S01E04.The.Captain.1080p.WEB-DL.DD5.1.H.264-PfXCPI
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: VICE.News.Tonight.2018.10.02.720p.WEB-DL.AAC2.0.H.264-doosh
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: ties.that.bind.s01e01.dsr.x264-w4f
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 9-1-1.s02e03.1080p.web.x264.tbs.UKSubs
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: black.earth.rising.s01e04.1080p.hdtv.x264.mtb.UKSubs
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Press.S01E04.720p.HDTV.x264-MTB
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Late.Night.With.Seth.Meyers.2018.10.01.Kenan.Thompson.Jameela.Jamil.Mean.Girls.Performance.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Real.Housewives.of.Orange.County.S13E11.8.5.Minutes.to.Success.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Better.Call.Saul.S04E09.Wiedersehen.720p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Better.Call.Saul.S04E09.Wiedersehen.1080p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Neighborhood.S01E01.Pilot.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Neighborhood.S01E01.Pilot.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Magnum.P.I.S01E02.From.the.Head.Down.720p.AMZN.WEBRip.DDP5.1.x264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: you.s01e04.the.captain.720p.hdtv.x264-w4f
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: VICE.News.Tonight.2018.10.01.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Daily.Show.with.Trevor.Noah.2018.10.01.Carol.Anderson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Jimmy.Kimmel.Live.2018.10.01.Henry.Winkler.Jenny.Slate.Lindsey.Buckingham.720p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Magnum.P.I.S01E02.From.the.Head.Down.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Magnum.P.I.S01E02.From.the.Head.Down.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Hawaii.Five-0.S09E01.Ka.owiliokai.1080p.AMZN.WEB-DL
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: NCIS.Los.Angeles.S10E01.1080p.AMZN.WEB-DL.DDP5.1.H.264-ViSUM
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Family.Guy.S17E01.Married.with.Cancer.1080p.AMZN.WEB-DL
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ballers.S04E08.The.Devil.You.Know.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ballers.S04E08.The.Devil.You.Know.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: VICE.News.Tonight.2018.10.01.720p.WEB-DL.AAC2.0.H.264-doosh
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Wanderlust.S01E04.720p.HDTV.x264-ORGANiC
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Jamie.Cooks.Italy.S01E08.Piedmont.720p.AMZN.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Jamie.Cooks.Italy.S01E08.Piedmont.1080p.AMZN.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: James.Martins.Saturday.Morning.S02E04.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 60.Minutes.S51E01.September.30.2018.1080p.AMZN.WEB-DL.DDP5.1.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: James.Martins.Saturday.Morning.S02E04.720p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Last.Week.Tonight.with.John.Oliver.S05E24.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Vanity.Fair.S01E04.720p.HDTV.x264-ORGANiC
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Good.Place.S03E01.Episode.1.720p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Good.Place.S03E01.Episode.1.1080p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: the.cry.s01e01.1080p.hdtv.x264.mtb.UKSubs
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: NCIS.Los.Angeles.S10E01.1080p.AMZN.WEB-DL.DDP5.1.H.264-ViSUM
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Circus.S03E09.Judgment.Day.720p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Circus.S03E09.Judgment.Day.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Chesapeake.Shores.S03E09.Episode.9.720p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Chesapeake.Shores.S03E09.Episode.9.1080p.NF.WEB-DL.DDP5.1.x264-TOMMY
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: James.Martins.Saturday.Morning.S02E03.720p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Only.Way.Is.Essex.S23E05.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: James.Martins.Saturday.Morning.S02E03.1080p.AMZN.WEB-DL.DDP2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Last.Week.Tonight.with.John.Oliver.S05E24.720p.WEB-DL.AAC2.0.H.264-doosh
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Deuce.S02E04.What.Big.Ideas.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E05.Why.Is.Joshs.Ex-Girlfriend.Eating.Carbs.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S01E01.Josh.Just.Happens.to.Live.Here.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E13.Can.Josh.Take.a.Leap.of.Faith.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E12.Is.Josh.Free.in.Two.Weeks.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E11.Josh.Is.the.Man.of.My.Dreams.Right.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E10.Will.Scarsdale.Like.Joshs.Shayna.Punim.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E09.When.Do.I.Get.to.Spend.Time.with.Josh.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E08.Who.Is.Joshs.Soup.Fairy.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E07.Whos.the.Cool.Girl.Josh.Is.Dating.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E06.Who.Needs.Josh.When.You.Have.a.Girl.Group.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E04.When.Will.Josh.and.His.Friend.Leave.Me.Alone.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E03.All.Signs.Point.to.Josh.or.Is.It.Joshs.Friend.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E02.When.Will.Josh.See.How.Cool.I.Am.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crazy.Ex-Girlfriend.S02E01.Where.Is.Joshs.Friend.1080p.NF.WEB-DL.DDP5.1.x264-CasStudio
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Deuce.S02E04.What.Big.Ideas.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Jim.Jefferies.Show.S02E22.Republicans.Stand.By.Brett.Kavanaugh.720p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Jim.Jefferies.Show.S02E22.Republicans.Stand.By.Brett.Kavanaugh.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Imitation.Game.S01E05.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: South.Park.S22E01.Dead.Kids.720p.AMZN.WEBRip.DDP2.0.x264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking if found episode 22x1 is wanted at quality 720p WEB-DL
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: any,best = [1, 2, 4, 16, 32, 64, 128, 256] [] and found 32
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT status FROM tv_episodes WHERE showid = ? AND season = ? AND episode = ? with args [75897, 22, 1]
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Existing episode status: 6402 (Snatched (1080p WEB-DL))
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Quality is on wanted list, need to check if it's better than existing quality
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Episode already exists and the found episode has same/lower quality, ignoring found episode
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: None of the conditions were met, ignoring found episode
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Skipping South.Park.S22E01.Dead.Kids.720p.AMZN.WEBRip.DDP2.0.x264-NTb because we don't want an episode that's 720p WEB-DL
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: South.Park.S22E01.Dead.Kids.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking if found episode 22x1 is wanted at quality 1080p WEB-DL
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: any,best = [1, 2, 4, 16, 32, 64, 128, 256] [] and found 64
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT status FROM tv_episodes WHERE showid = ? AND season = ? AND episode = ? with args [75897, 22, 1]
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Existing episode status: 6402 (Snatched (1080p WEB-DL))
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Quality is on wanted list, need to check if it's better than existing quality
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Episode already exists and the found episode has same/lower quality, ignoring found episode
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: None of the conditions were met, ignoring found episode
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Skipping South.Park.S22E01.Dead.Kids.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb because we don't want an episode that's 1080p WEB-DL
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Shameless.US.S09E04.Do.Right.Vote.White.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Crash.S01E01.Crash.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Blue.Bloods.S09E01.Playing.With.Fire.720p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Blue.Bloods.S09E01.Playing.With.Fire.1080p.AMZN.WEB-DL.DDP5.1.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Back.to.Mine.Stay.For.Longer.S01E01.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Back.To.Mine.S01E01.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Absolutely.Ascot.S01E02.1080p.AMZN.WEB-DL.DDP2.0.H.264-NTb
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: I.Love.You.America.With.Sarah.Silverman.S01E14.18.Bill.Burr.720p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: I.Love.You.America.With.Sarah.Silverman.S01E14.Bill.Burr.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Saturday.Night.Live.S44E01.Adam.Driver.Kanye.West.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Saturday.Night.Live.S44E01.Adam.Driver.Kanye.West.720p.WEB-DL.AAC2.0.H.264-doosh
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT time FROM lastUpdate WHERE provider = ? with args ['nzgeek']
2018-10-04 03:24:51 DEBUG    SEARCHQUEUE-RSS-SEARCH :: NZGeek cache update URL: https://api.nzbgeek.info/api?apikey=df15e8c9e112c06ff7c634cf43aae423&t=tvsearch&cat=5030%2C5040
2018-10-04 03:24:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: UPDATE lastUpdate SET time = ? WHERE provider = ? with args [1538641492, 'nzgeek']
2018-10-04 03:24:52 INFO     SEARCHQUEUE-RSS-SEARCH :: Clearing NZGeek cache and updating with new information
2018-10-04 03:24:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: DELETE FROM [nzgeek] WHERE 1
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chesapeake.Shores.S03E06.MULTi.1080p.WEB.x264.1-CARAPiLS-Obfuscated
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chesapeake Shores
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chesapeake.Shores']
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chesapeake.Shores.S03E06.MULTi.1080p.WEB.x264.1-CARAPiLS-Obfuscated', 3, '|6|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=e32a02d33c4689a5c477cbb5cad422b7&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641493, 32768]
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Stephen.Colbert.2018.10.03.Nick.Kroll.480p.x264-mSD-Obfuscated
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Stephen Colbert
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Stephen.Colbert']
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Stephen.Colbert.2018.10.03.Nick.Kroll.480p.x264-mSD-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=38ae8407e2115ca0fcd4a4d2d8abbc0d&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641493, 32768]
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Stephen.Colbert.2018.10.03.Nick.Kroll.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Stephen Colbert
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Stephen.Colbert']
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Stephen.Colbert.2018.10.03.Nick.Kroll.1080p.WEB.x264.1-TBS-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=6d2ebc2f4c2371f31acb82f8033270b4&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641493, 32768]
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Stephen.Colbert.2018.10.03.Nick.Kroll.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Stephen Colbert
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Stephen.Colbert']
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:53 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Stephen.Colbert.2018.10.03.Nick.Kroll.720p.HEVC.x265-MeGusta-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=ad546eb2eea2ff38abed1b65e61d6258&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641493, 32768]
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ice.2016.S02E10.FiNAL.MULTi.1080p.HDTV.x264.1-HYBRiS-Obfuscated
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ice 2016
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ice.2016']
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Ice 2016', u'Ice 2016']
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Ice%', u'Ice%', u'2016']
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Ice 2016
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT DISTINCT show_name FROM scene_exceptions WHERE tvdb_id = ? with args [250487]
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT DISTINCT show_name FROM scene_exceptions WHERE tvdb_id = ? with args [296979]
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT DISTINCT show_name FROM scene_exceptions WHERE tvdb_id = ? with args [75897]
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Ice.2016']
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ice.2016.S02E10.FiNAL.MULTi.1080p.HDTV.x264.1-HYBRiS-Obfuscated', 2, '|10|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=334ba32f527e7b62572ed1789d49559f&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641494, 16]
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Vanity.Fair.2018.S01E04.1080p.AMZN.WEBRip.DDP2.0.x264-NTb-postbot
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Vanity Fair 2018
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Vanity.Fair.2018']
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Vanity Fair 2018', u'Vanity Fair 2018']
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Vanity Fair%', u'Vanity Fair%', u'2018']
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Vanity Fair 2018
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT DISTINCT show_name FROM scene_exceptions WHERE tvdb_id = ? with args [250487]
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT DISTINCT show_name FROM scene_exceptions WHERE tvdb_id = ? with args [296979]
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT DISTINCT show_name FROM scene_exceptions WHERE tvdb_id = ? with args [75897]
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Vanity.Fair.2018']
2018-10-04 03:24:54 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Vanity.Fair.2018.S01E04.1080p.AMZN.WEBRip.DDP2.0.x264-NTb-postbot', 1, '|4|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=5e766a05aa22315c545617d6fb8cf7f3&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641494, 64]
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Mayans.M.C.S01E05.MULTi.1080p.HDTV.x264.1-HYBRiS-Obfuscated
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Mayans M C
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Mayans.M.C']
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Mayans.M.C.S01E05.MULTi.1080p.HDTV.x264.1-HYBRiS-Obfuscated', 1, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=2088261d203144ad34c75a0d6da3c9c4&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641495, 16]
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Stephen.Colbert.2018.10.03.Nick.Kroll.XviD-AFG-Obfuscated
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Stephen Colbert
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Stephen.Colbert']
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Stephen.Colbert.2018.10.03.Nick.Kroll.XviD-AFG-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=3d3bd20e63c886b27feefde358ca74a0&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641495, 32768]
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Stephen.Colbert.2018.10.03.Nick.Kroll.1080p.WEB.x264-TBS-Obfuscated
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Stephen Colbert
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Stephen.Colbert']
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:55 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Stephen.Colbert.2018.10.03.Nick.Kroll.1080p.WEB.x264-TBS-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=123c5fa7f222054f744991e5c91ea770&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641495, 32768]
2018-10-04 03:24:56 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Stephen.Colbert.2018.10.03.Nick.Kroll.WEB.x264-TBS-Obfuscated
2018-10-04 03:24:56 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Stephen Colbert
2018-10-04 03:24:56 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Stephen.Colbert']
2018-10-04 03:24:56 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:56 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Stephen.Colbert.2018.10.03.Nick.Kroll.WEB.x264-TBS-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=f3b25bbb3318cdf6b2dcfa29ad589af1&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641496, 32768]
2018-10-04 03:24:56 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Stephen.Colbert.2018.10.03.Nick.Kroll.720p.WEB.x264-TBS-Obfuscated
2018-10-04 03:24:56 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Stephen Colbert
2018-10-04 03:24:56 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Stephen.Colbert']
2018-10-04 03:24:56 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:56 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Stephen.Colbert.2018.10.03.Nick.Kroll.720p.WEB.x264-TBS-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=720c7d2dfb2366dda8553483b62af7b5&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641496, 32768]
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S03E02.There.Are.Worse.Things.Than.Murder.1080p.AMZN.WEBRip.DD5.1.x264.1-NTb-Obfuscated
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S03E02.There.Are.Worse.Things.Than.Murder.1080p.AMZN.WEBRip.DD5.1.x264.1-NTb-Obfuscated', 3, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=da9c410a1c13d371347b259fa31dbe0c&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641497, 64]
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S03E01.Were.Good.People.Now.1080p.AMZN.WEBRip.DD5.1.x264.1-NTb-Obfuscated
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S03E01.Were.Good.People.Now.1080p.AMZN.WEBRip.DD5.1.x264.1-NTb-Obfuscated', 3, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=30647616b43e1206bf5018dc00e473bd&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641497, 64]
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Criminal.Minds.S14E01.iNTERNAL.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Criminal Minds
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Criminal.Minds']
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Criminal.Minds.S14E01.iNTERNAL.720p.HEVC.x265-MeGusta-Obfuscated', 14, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=51aa3274ed799c831ca43489522061e2&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641497, 32768]
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Strictly.Come.Dancing.It.Takes.Two.S16E08.720p.iP.WEB-DL.AAC2.0.H.264-BTW-RakuvFIN-Obfuscated
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Strictly Come Dancing It Takes Two
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Strictly.Come.Dancing.It.Takes.Two']
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:57 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Strictly.Come.Dancing.It.Takes.Two.S16E08.720p.iP.WEB-DL.AAC2.0.H.264-BTW-RakuvFIN-Obfuscated', 16, '|8|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=2ea9bdc7525d232f1379127f1ca40aa4&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641497, 32]
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E15.Anna.Mae.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E15.Anna.Mae.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|15|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=276c9b3c60e3b76d1af8b685213a6d4d&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641498, 64]
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E14.Theres.My.Baby.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E14.Theres.My.Baby.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|14|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=b64fb95cee4bd6528ddc6a3e7eaa719b&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641498, 64]
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E13.Something.Bad.Happened.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E13.Something.Bad.Happened.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|13|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=8acad75fb07e3ca0e554624a03e86eea&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641498, 64]
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Criminal.Minds.S14E01.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Criminal Minds
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Criminal.Minds']
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Criminal.Minds.S14E01.1080p.WEB.x264.1-TBS-Obfuscated', 14, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=c5764210d42bf118424034fd49a3bbd1&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641498, 32768]
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Criminal.Minds.S14E01.iNTERNAL.XviD-AFG-Obfuscated
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Criminal Minds
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Criminal.Minds']
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:58 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Criminal.Minds.S14E01.iNTERNAL.XviD-AFG-Obfuscated', 14, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=7c6bdbd7c07cc8be0852ed2a577a19c6&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641498, 32768]
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E12.Its.a.Trap.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E12.Its.a.Trap.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|12|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=5ffb7d912f33731c53caee0f95a6e15c&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641499, 64]
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Criminal.Minds.S14E01.iNTERNAL.480p.x264-mSD-Obfuscated
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Criminal Minds
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Criminal.Minds']
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Criminal.Minds.S14E01.iNTERNAL.480p.x264-mSD-Obfuscated', 14, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=b4dcb80c69d87bd5641d9778c584428d&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641499, 32768]
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Criminal.Minds.S14E01.iNTERNAL.720p.WEB.x264-BAMBOOZLE-Obfuscated
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Criminal Minds
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Criminal.Minds']
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Criminal.Minds.S14E01.iNTERNAL.720p.WEB.x264-BAMBOOZLE-Obfuscated', 14, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=410ecab2c220e242a72497da76ccc7a9&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641499, 32768]
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: the.voice.s15e04.web.x264-tbs-BUYMORE
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of the voice
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'the.voice']
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['the.voice.s15e04.web.x264-tbs-BUYMORE', 15, '|4|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=885a52a25e5b4cd392c8d6f6822f634a&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641499, 32768]
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee-Obfuscated
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show
2018-10-04 03:24:59 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show']
2018-10-04 03:25:00 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:00 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=58969876cf28a3cda5c06e7a869df02d&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641500, 64]
2018-10-04 03:25:00 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Voice.S15E04.The.Blind.Auditions.Part.4.1080p.Hulu.WEB-DL.AAC2.0.H.264-QOQ-BUYMORE
2018-10-04 03:25:00 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Voice
2018-10-04 03:25:00 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Voice']
2018-10-04 03:25:00 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:00 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Voice.S15E04.The.Blind.Auditions.Part.4.1080p.Hulu.WEB-DL.AAC2.0.H.264-QOQ-BUYMORE', 15, '|4|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=ae2899ad94437c549e5f10513b1310bd&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641500, 64]
2018-10-04 03:25:02 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Criminal.Minds.S14E01.1080p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:02 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Criminal Minds
2018-10-04 03:25:02 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Criminal.Minds']
2018-10-04 03:25:02 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:02 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Criminal.Minds.S14E01.1080p.WEB.x264-TBS-Obfuscated', 14, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=d9a9ac578e480872053d6ae0fd863f83&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641502, 32768]
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E11.She.Hates.Us.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E11.She.Hates.Us.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|11|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=be46ca532dafe9f49511dafdc7111efc&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641503, 64]
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: the.voice.s15e04.720p.web.x264-tbs-BUYMORE
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of the voice
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'the.voice']
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['the.voice.s15e04.720p.web.x264-tbs-BUYMORE', 15, '|4|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=0b3c85d9cf8f71b5cea6966ff689ff01&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641503, 32768]
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: South.Park.S22E02.iNTERNAL.720p.WEB.h264-BAMBOOZLE-postbot
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of South Park
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'South.Park']
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 75897, using that
2018-10-04 03:25:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['South.Park.S22E02.iNTERNAL.720p.WEB.h264-BAMBOOZLE-postbot', 22, '|2|', 0, 75897, 'https://api.nzbgeek.info/api?t=get&id=251e98c2dc217f2af3a9ab41b077a04b&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641503, 32768]
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: SEAL.Team.S02E01.iNTERNAL.720p.WEB.x264-BAMBOOZLE-postbot
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of SEAL Team
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'SEAL.Team']
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['SEAL.Team.S02E01.iNTERNAL.720p.WEB.x264-BAMBOOZLE-postbot', 2, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=581ecd9c957d2db9b759f985367fdfe9&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641504, 32768]
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E10.What.Happened.to.You.Annalise.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E10.What.Happened.to.You.Annalise.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|10|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=cf94b8f899acb754723cd9e11ecb8acc&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641504, 64]
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: the.voice.s15e04.1080p.web.x264-tbs-BUYMORE
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of the voice
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'the.voice']
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['the.voice.s15e04.1080p.web.x264-tbs-BUYMORE', 15, '|4|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=a13175f94915136d4381d1bb9ffd01b6&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641504, 32768]
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Purge.S01E05.Rise.Up.720p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS-BUYMORE
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Purge
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Purge']
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Purge.S01E05.Rise.Up.720p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS-BUYMORE', 1, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=a5baa0e1a672bebb88cedadad0007e7d&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641504, 32]
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Purge.S01E05.PROPER.Rise.Up.720p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS-BUYMORE
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Purge
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Purge']
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Purge.S01E05.PROPER.Rise.Up.720p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS-BUYMORE', 1, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=526ce5562bb5c82dff92d6dcc80dbdf2&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641504, 32]
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Purge.S01E05.HDTV.x264-CRAVERS-BUYMORE
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Purge
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Purge']
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Purge.S01E05.HDTV.x264-CRAVERS-BUYMORE', 1, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=e9dc88865556ae07994fa9a39e57750b&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641505, 1]
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: SEAL.Team.S02E01.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of SEAL Team
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'SEAL.Team']
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['SEAL.Team.S02E01.1080p.WEB.x264.1-TBS-Obfuscated', 2, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=35f05e328fb428ba71be2d4f35d74a15&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641505, 32768]
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: SEAL.Team.S02E01.iNTERNAL.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of SEAL Team
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'SEAL.Team']
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['SEAL.Team.S02E01.iNTERNAL.720p.HEVC.x265-MeGusta-Obfuscated', 2, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=1910bbd99479426fffbe7791269e0804&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641505, 32768]
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Purge.S01E05.720p.HDTV.x264-CRAVERS-BUYMORE
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Purge
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Purge']
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Purge.S01E05.720p.HDTV.x264-CRAVERS-BUYMORE', 1, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=258a404e940f0759599c2e23f043eac7&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641505, 4]
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Our.Cartoon.President.S01e01.State.Of.The.Union.1080P.Amzn.Web-Dl.Ddp2.0.H.264-Monkee-1-BUYMORE
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Our Cartoon President
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Our.Cartoon.President']
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Our.Cartoon.President.S01e01.State.Of.The.Union.1080P.Amzn.Web-Dl.Ddp2.0.H.264-Monkee-1-BUYMORE', 1, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=51adec1043e4ad35f1b85efdedad4d67&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641505, 64]
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: SEAL.Team.S02E01.iNTERNAL.XviD-AFG-Obfuscated
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of SEAL Team
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'SEAL.Team']
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['SEAL.Team.S02E01.iNTERNAL.XviD-AFG-Obfuscated', 2, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=242369606675888eabf782dd6bf0f68b&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641506, 32768]
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E09.What.Did.We.Do.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E09.What.Did.We.Do.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|9|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=22e5b31c307fbefecc90f2187e23d6ff&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641506, 64]
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: SEAL.Team.S02E01.iNTERNAL.480p.x264-mSD-Obfuscated
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of SEAL Team
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'SEAL.Team']
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['SEAL.Team.S02E01.iNTERNAL.480p.x264-mSD-Obfuscated', 2, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=a8f83c7003cdd7c740497176c5f106a9&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641506, 32768]
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Late.Night.With.Seth.Meyers.2018.10.02.Eric.McCormack.Sean.Casey.andampamp.Kevin.Millar.Amanda.Litman.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee-Obfuscated
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Late Night With Seth Meyers
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Late.Night.With.Seth.Meyers']
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Late.Night.With.Seth.Meyers.2018.10.02.Eric.McCormack.Sean.Casey.andampamp.Kevin.Millar.Amanda.Litman.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=52a3c3b903d5385534f0cbf918518114&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641507, 64]
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Kidding.S01E04.Bye.Mom.720p.AMZN.WEBRip.DDP5.1.x264-NTb-BUYMORE
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Kidding
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Kidding']
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Kidding.S01E04.Bye.Mom.720p.AMZN.WEBRip.DDP5.1.x264-NTb-BUYMORE', 1, '|4|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=198f709afb8a04221f5eca4183338ad0&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641507, 32]
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E08.Hi.Im.Philip.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E08.Hi.Im.Philip.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|8|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=1e140dac049e42a25ce32731a29f6849&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641507, 64]
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Big.Brother.UK.S19E16.HDTV.x264-PLUTONiUM-BUYMORE
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Big Brother UK
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Big.Brother.UK']
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Big.Brother.UK.S19E16.HDTV.x264-PLUTONiUM-BUYMORE', 19, '|16|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=fa37f7b5e1f23b1f5a60f1dd9be5b1ca&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641507, 1]
2018-10-04 03:25:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Big.Brother.UK.S19E16.720p.HDTV.x264-PLUTONiUM-BUYMORE
2018-10-04 03:25:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Big Brother UK
2018-10-04 03:25:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Big.Brother.UK']
2018-10-04 03:25:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Big.Brother.UK.S19E16.720p.HDTV.x264-PLUTONiUM-BUYMORE', 19, '|16|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=3acdd0003a45952eb728b7a839a55e6c&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641509, 4]
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Big.Brother.UK.S19E16.1080p.HDTV.x264-PLUTONiUM-BUYMORE
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Big Brother UK
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Big.Brother.UK']
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Big.Brother.UK.S19E16.1080p.HDTV.x264-PLUTONiUM-BUYMORE', 19, '|16|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=1e057995dee10cf1aadcb8b56a6819e7&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641510, 16]
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: SEAL.Team.S02E01.iNTERNAL.720p.WEB.x264-BAMBOOZLE-Obfuscated
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of SEAL Team
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'SEAL.Team']
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['SEAL.Team.S02E01.iNTERNAL.720p.WEB.x264-BAMBOOZLE-Obfuscated', 2, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=2c56e3477cbe31742ec0bd356032956a&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641510, 32768]
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: SEAL.Team.S02E01.1080p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of SEAL Team
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'SEAL.Team']
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['SEAL.Team.S02E01.1080p.WEB.x264-TBS-Obfuscated', 2, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=6d56572a3f94edd500c73fd10fc8d21e&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641510, 32768]
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E07.I.Want.You.To.Die.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E07.I.Want.You.To.Die.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|7|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=cbf76dd8d0b6eb081263d390948662d7&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641510, 64]
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E06.Two.Birds.One.Millstone.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E06.Two.Birds.One.Millstone.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|6|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=ecb2f11238bdc7c16598876ba1f9705e&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641510, 64]
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Total.Divas.S08E03.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Total Divas
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Total.Divas']
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Total.Divas.S08E03.1080p.WEB.x264.1-TBS-Obfuscated', 8, '|3|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=1956bea7c074738a2c5f552b348fba59&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641511, 32768]
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E05.Meet.Bonnie.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E05.Meet.Bonnie.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=587f4f18db6c111b5ed2af532d57e79c&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641511, 64]
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E04.Skanks.Get.Shanked.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E04.Skanks.Get.Shanked.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|4|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=4badd4e80d2dc1ff41b880b45ab250c3&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641511, 64]
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E03.Its.Called.the.Octopus.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E03.Its.Called.the.Octopus.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|3|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=12302bdb56cc3de83e41b70cb4f7fc4b&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641511, 64]
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E02.Shes.Dying.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E02.Shes.Dying.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=ba516a2751d422744e0a4dfe08c8f5d4&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641512, 64]
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Survivor.S37E02.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Survivor
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Survivor']
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Survivor.S37E02.1080p.WEB.x264.1-TBS-Obfuscated', 37, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=1f5aba7a09bfe7125d84583ec9dedd1d&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641512, 32768]
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S02E01.Its.Time.to.Move.On.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S02E01.Its.Time.to.Move.On.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 2, '|1|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=8f372b2f4b10160ba48fa3a65280d7f4&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641512, 64]
2018-10-04 03:25:13 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Survivor.S37E02.READNFO.720p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:13 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Survivor
2018-10-04 03:25:13 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Survivor']
2018-10-04 03:25:13 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:13 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Survivor.S37E02.READNFO.720p.WEB.x264-TBS-Obfuscated', 37, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=b5f951e2a672cfdf70308660d1f46f18&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641513, 32768]
2018-10-04 03:25:14 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Purge.S01E05.HDTV.x264-CRAVERS-postbot
2018-10-04 03:25:14 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Purge
2018-10-04 03:25:14 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Purge']
2018-10-04 03:25:14 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:14 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Purge.S01E05.HDTV.x264-CRAVERS-postbot', 1, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=a700bd7cd1f0e2c570618a3723f12917&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641514, 1]
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Survivor.S37E02.READNFO.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Survivor
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Survivor']
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Survivor.S37E02.READNFO.WEB.x264-TBS-Obfuscated', 37, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=577beee792ae1b3ac6e3c965406f2288&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641515, 32768]
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Survivor.S37E02.1080p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Survivor
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Survivor']
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Survivor.S37E02.1080p.WEB.x264-TBS-Obfuscated', 37, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=a359a16cbb04094d05690d009d0afe90&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641515, 32768]
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Purge.S01E05.720p.HDTV.x264-CRAVERS-postbot
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Purge
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Purge']
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Purge.S01E05.720p.HDTV.x264-CRAVERS-postbot', 1, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=0448fa2c98b0c1365f794aa097524d20&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641515, 4]
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lethal.Weapon.S03E02.HDTV.x264-CRAVERS-postbot
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lethal Weapon
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lethal.Weapon']
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lethal.Weapon.S03E02.HDTV.x264-CRAVERS-postbot', 3, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=b46197d11586c4cc3ad8aac9a43d4903&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641515, 1]
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lethal.Weapon.S03E02.720p.HDTV.x264-CRAVERS-postbot
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lethal Weapon
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lethal.Weapon']
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:15 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lethal.Weapon.S03E02.720p.HDTV.x264-CRAVERS-postbot', 3, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=a88872d520a69afddf61ef6fe810b90f&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641515, 4]
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Watch.What.Happens.Live.2018.10.02.Kate.Chastain.and.Capt.Lee.Rosbach.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Watch What Happens Live
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Watch.What.Happens.Live']
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Watch.What.Happens.Live.2018.10.02.Kate.Chastain.and.Capt.Lee.Rosbach.1080p.WEB.x264.1-TBS-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=5154007725b67055841132440e2af233&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641516, 32768]
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Shaun.Micallefs.Mad.As.Hell.S09E03.720p.HDTV.x264-CBFM-RakuvFIN-Obfuscated
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Shaun Micallefs Mad As Hell
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Shaun.Micallefs.Mad.As.Hell']
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Shaun.Micallefs.Mad.As.Hell.S09E03.720p.HDTV.x264-CBFM-RakuvFIN-Obfuscated', 9, '|3|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=276756204b0c53ec5e6e367e89394724&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641516, 4]
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.with.Trevor.Noah.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee-Obfuscated
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show with Trevor Noah
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show.with.Trevor.Noah']
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.with.Trevor.Noah.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=402f8487378c2aabcca33a6b5b95f0dd&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641516, 64]
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Greys.Anatomy.S15E03.HDTV.x264-KILLERS-postbot
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Greys Anatomy
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Greys.Anatomy']
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:16 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Greys.Anatomy.S15E03.HDTV.x264-KILLERS-postbot', 15, '|3|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=77cae2333fd7acdfc32a1a3c6bbd434a&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641516, 1]
2018-10-04 03:25:22 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S01E15.Its.All.My.Fault.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:22 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:22 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:22 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:22 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S01E15.Its.All.My.Fault.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 1, '|15|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=7b11c92b7b27f40ed90e01822fd78875&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641522, 64]
2018-10-04 03:25:22 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chicago.Fire.S07E02.Chicago.Med.S04E02.HDTV.x264-KILLERS-postbot
2018-10-04 03:25:22 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chicago Fire
2018-10-04 03:25:22 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chicago.Fire']
2018-10-04 03:25:22 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:22 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chicago.Fire.S07E02.Chicago.Med.S04E02.HDTV.x264-KILLERS-postbot', 7, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=15ad3805034098d9626bdb3755fce076&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641522, 1]
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: A.Million.Little.Things.S01E02.HDTV.x264-KILLERS-postbot
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of A Million Little Things
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'A.Million.Little.Things']
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['A.Million.Little.Things.S01E02.HDTV.x264-KILLERS-postbot', 1, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=cb7c866f717f2b8a06872f245a10080f&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641532, 1]
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: A.Million.Little.Things.S01E02.720p.HDTV.x264-KILLERS-postbot
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of A Million Little Things
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'A.Million.Little.Things']
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['A.Million.Little.Things.S01E02.720p.HDTV.x264-KILLERS-postbot', 1, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=6cd18ce1c405886cba83440a6db23af6&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641532, 4]
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S01E14.The.Night.Lila.Died.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S01E14.The.Night.Lila.Died.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 1, '|14|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=dc6bff721c699808a2ff48dd921f84a2&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641532, 64]
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S01E13.Mamas.Here.Now.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:32 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S01E13.Mamas.Here.Now.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 1, '|13|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=694a4a9ee95785d70edbb81e5f1967e1&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641532, 64]
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lethal.Weapon.S03E02.720p.HDTV.x264-CRAVERS-Scrambled
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lethal Weapon
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lethal.Weapon']
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lethal.Weapon.S03E02.720p.HDTV.x264-CRAVERS-Scrambled', 3, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=d8333971e7457b7d3670bcb87be9745b&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641533, 4]
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: A.Million.Little.Things.S01E02.720p.HDTV.x264-KILLERS-Obfuscated
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of A Million Little Things
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'A.Million.Little.Things']
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['A.Million.Little.Things.S01E02.720p.HDTV.x264-KILLERS-Obfuscated', 1, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=e4e89c1e7575176107851c8b6998cfef&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641533, 4]
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Greys.Anatomy.S15E03.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Greys Anatomy
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Greys.Anatomy']
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Greys.Anatomy.S15E03.720p.HEVC.x265-MeGusta-Obfuscated', 15, '|3|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=58d04982cb1828a9fcfe5bf49c7ff285&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641533, 32768]
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.with.Trevor.Noah.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show with Trevor Noah
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show.with.Trevor.Noah']
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:33 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.with.Trevor.Noah.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=b81b7f8892b0ecc4825973c1a45b96e5&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641533, 64]
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show']
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=2458a45e273ffa1a4770c0eee85c4c50&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641534, 64]
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S01E12.Shes.A.Murderer.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S01E12.Shes.A.Murderer.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 1, '|12|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=b3bb21015d9203e39e316c478dc606b6&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641534, 64]
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.EXTENDED.720p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show']
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.EXTENDED.720p.WEB.x264-TBS-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=aaa1f2fedb80715944fefba8ee5393bc&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641534, 32768]
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: American.Horror.Story.S08E04.720p.WEBRip.x264-TBS-Obfuscated
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of American Horror Story
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'American.Horror.Story']
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 250487, using that
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['American.Horror.Story.S08E04.720p.WEBRip.x264-TBS-Obfuscated', 8, '|4|', 0, 250487, 'https://api.nzbgeek.info/api?t=get&id=07b75164132ee6041b0bddca7e0f7c65&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641534, 32]
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: What.Lies.Beneath.S01E05.The.Devil.You.Know.720p.WEBRip.x264-CAFFEiNE-Obfuscated
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of What Lies Beneath
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'What.Lies.Beneath']
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:34 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['What.Lies.Beneath.S01E05.The.Devil.You.Know.720p.WEBRip.x264-CAFFEiNE-Obfuscated', 1, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=d2fc0c2fa7b2efa8f8b65e9f96fb384a&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641534, 32]
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S01E11.Best.Christmas.Ever.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S01E11.Best.Christmas.Ever.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated', 1, '|11|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=19d7b8fbdf1914950b0d122294c1271b&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641535, 64]
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: What.Lies.Beneath.S01E05.The.Devil.You.Know.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of What Lies Beneath
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'What.Lies.Beneath']
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['What.Lies.Beneath.S01E05.The.Devil.You.Know.720p.HEVC.x265-MeGusta-Obfuscated', 1, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=3477c4200501b85b23b2722b169189cf&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641535, 32768]
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Greys.Anatomy.S15E03.720p.HDTV.x264-KILLERS-postbot
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Greys Anatomy
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Greys.Anatomy']
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Greys.Anatomy.S15E03.720p.HDTV.x264-KILLERS-postbot', 15, '|3|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=03ea5996933aac8507b0422d8d140101&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641535, 4]
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Innocents.S01E06.INTERNAL.1080p.WEBRip.X264-DEFLATE-RakuvFIN-Obfuscated
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Innocents
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Innocents']
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Innocents.S01E06.INTERNAL.1080p.WEBRip.X264-DEFLATE-RakuvFIN-Obfuscated', 1, '|6|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=85c46c8da41a2766c171c4d0615be436&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641535, 64]
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Greenleaf.S03E06.720p.WEBRip.x264-TBS-Obfuscated
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Greenleaf
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Greenleaf']
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:35 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Greenleaf.S03E06.720p.WEBRip.x264-TBS-Obfuscated', 3, '|6|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=ba3f57a9faf2f57ff992fb707f987715&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641535, 32]
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Greys.Anatomy.S15E03.720p.HDTV.x264-KILLERS-Scrambled
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Greys Anatomy
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Greys.Anatomy']
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Greys.Anatomy.S15E03.720p.HDTV.x264-KILLERS-Scrambled', 15, '|3|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=953f00182ca53db95d52a02cf9e6ecc3&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641536, 4]
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Its.Always.Sunny.in.Philadelphia.S13E05.720p.WEBRip.x264-TBS-Obfuscated
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Its Always Sunny in Philadelphia
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Its.Always.Sunny.in.Philadelphia']
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Its.Always.Sunny.in.Philadelphia.S13E05.720p.WEBRip.x264-TBS-Obfuscated', 13, '|5|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=32240c2c0e9c1b9330fb58a5fb55c963&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641536, 32]
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Survivor.S37E02.HDTV.x264-PLUTONiUM-postbot
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Survivor
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Survivor']
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Survivor.S37E02.HDTV.x264-PLUTONiUM-postbot', 37, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=5698c44bb401440b4a82e7bc4d62e7b5&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641536, 1]
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: South.Park.S22E02.720p.HDTV.x264-AVS-Scrambled
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of South Park
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'South.Park']
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 75897, using that
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['South.Park.S22E02.720p.HDTV.x264-AVS-Scrambled', 22, '|2|', 0, 75897, 'https://api.nzbgeek.info/api?t=get&id=54a0144d3739d991ab35b248eba1469f&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641536, 4]
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: South.Park.S22E02.720p.HDTV.x264-AVS-Obfuscated
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of South Park
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'South.Park']
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 75897, using that
2018-10-04 03:25:36 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['South.Park.S22E02.720p.HDTV.x264-AVS-Obfuscated', 22, '|2|', 0, 75897, 'https://api.nzbgeek.info/api?t=get&id=22198aaf86d7d13fdcd9167c8b59d855&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641536, 4]
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Single.Parents.S01E02.720p.HDTV.x264-KILLERS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Single Parents
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Single.Parents']
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Single.Parents.S01E02.720p.HDTV.x264-KILLERS-Obfuscated', 1, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=1da8fd777f8fbb2a581e3c12d5ea958b&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641537, 4]
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Modern.Family.S10E02.PROPER.720p.HDTV.x264-KILLERS-Scrambled
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Modern Family
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Modern.Family']
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Modern.Family.S10E02.PROPER.720p.HDTV.x264-KILLERS-Scrambled', 10, '|2|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=e88ecdcd95917950ad02cbb7da08ade2&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641537, 4]
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Greenleaf.S03E06.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Greenleaf
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Greenleaf']
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Greenleaf.S03E06.720p.HEVC.x265-MeGusta-Obfuscated', 3, '|6|', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=51f617f33c398216d36196bb18c5771c&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641537, 32768]
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.EXTENDED.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show']
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [nzgeek] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.EXTENDED.1080p.WEB.x264.1-TBS-Obfuscated', 1, '||', 0, 0, 'https://api.nzbgeek.info/api?t=get&id=13b5e2112fb84d37d7afbf931b39cac5&apikey=df15e8c9e112c06ff7c634cf43aae423', 1538641537, 32768]
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM [nzgeek]
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Chesapeake.Shores.S03E06.MULTi.1080p.WEB.x264.1-CARAPiLS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Stephen.Colbert.2018.10.03.Nick.Kroll.480p.x264-mSD-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Invalid scene release: Stephen.Colbert.2018.10.03.Nick.Kroll.480p.x264-mSD-Obfuscated contains 480p, ignoring it
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Stephen.Colbert.2018.10.03.Nick.Kroll.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Stephen.Colbert.2018.10.03.Nick.Kroll.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ice.2016.S02E10.FiNAL.MULTi.1080p.HDTV.x264.1-HYBRiS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Vanity.Fair.2018.S01E04.1080p.AMZN.WEBRip.DDP2.0.x264-NTb-postbot
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Mayans.M.C.S01E05.MULTi.1080p.HDTV.x264.1-HYBRiS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Stephen.Colbert.2018.10.03.Nick.Kroll.XviD-AFG-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Stephen.Colbert.2018.10.03.Nick.Kroll.1080p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Stephen.Colbert.2018.10.03.Nick.Kroll.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Stephen.Colbert.2018.10.03.Nick.Kroll.720p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S03E02.There.Are.Worse.Things.Than.Murder.1080p.AMZN.WEBRip.DD5.1.x264.1-NTb-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S03E01.Were.Good.People.Now.1080p.AMZN.WEBRip.DD5.1.x264.1-NTb-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Criminal.Minds.S14E01.iNTERNAL.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Strictly.Come.Dancing.It.Takes.Two.S16E08.720p.iP.WEB-DL.AAC2.0.H.264-BTW-RakuvFIN-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E15.Anna.Mae.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E14.Theres.My.Baby.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E13.Something.Bad.Happened.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Criminal.Minds.S14E01.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Criminal.Minds.S14E01.iNTERNAL.XviD-AFG-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E12.Its.a.Trap.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Criminal.Minds.S14E01.iNTERNAL.480p.x264-mSD-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Invalid scene release: Criminal.Minds.S14E01.iNTERNAL.480p.x264-mSD-Obfuscated contains 480p, ignoring it
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Criminal.Minds.S14E01.iNTERNAL.720p.WEB.x264-BAMBOOZLE-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: the.voice.s15e04.web.x264-tbs-BUYMORE
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Voice.S15E04.The.Blind.Auditions.Part.4.1080p.Hulu.WEB-DL.AAC2.0.H.264-QOQ-BUYMORE
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Criminal.Minds.S14E01.1080p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E11.She.Hates.Us.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: the.voice.s15e04.720p.web.x264-tbs-BUYMORE
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: South.Park.S22E02.iNTERNAL.720p.WEB.h264-BAMBOOZLE-postbot
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking if found episode 22x2 is wanted at quality Unknown
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: any,best = [1, 2, 4, 16, 32, 64, 128, 256] [] and found 32768
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Don't want this quality, ignoring found episode
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Skipping South.Park.S22E02.iNTERNAL.720p.WEB.h264-BAMBOOZLE-postbot because we don't want an episode that's Unknown
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: SEAL.Team.S02E01.iNTERNAL.720p.WEB.x264-BAMBOOZLE-postbot
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E10.What.Happened.to.You.Annalise.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: the.voice.s15e04.1080p.web.x264-tbs-BUYMORE
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Purge.S01E05.Rise.Up.720p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS-BUYMORE
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Purge.S01E05.PROPER.Rise.Up.720p.AMZN.WEB-DL.DDP5.1.H.264-KiNGS-BUYMORE
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Purge.S01E05.HDTV.x264-CRAVERS-BUYMORE
2018-10-04 03:25:37 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: SEAL.Team.S02E01.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: SEAL.Team.S02E01.iNTERNAL.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Purge.S01E05.720p.HDTV.x264-CRAVERS-BUYMORE
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Our.Cartoon.President.S01e01.State.Of.The.Union.1080P.Amzn.Web-Dl.Ddp2.0.H.264-Monkee-1-BUYMORE
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: SEAL.Team.S02E01.iNTERNAL.XviD-AFG-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E09.What.Did.We.Do.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: SEAL.Team.S02E01.iNTERNAL.480p.x264-mSD-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Invalid scene release: SEAL.Team.S02E01.iNTERNAL.480p.x264-mSD-Obfuscated contains 480p, ignoring it
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Late.Night.With.Seth.Meyers.2018.10.02.Eric.McCormack.Sean.Casey.andampamp.Kevin.Millar.Amanda.Litman.1080p.HULU.WEB-DL.AAC2.0.H.264-monkee-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Kidding.S01E04.Bye.Mom.720p.AMZN.WEBRip.DDP5.1.x264-NTb-BUYMORE
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E08.Hi.Im.Philip.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Big.Brother.UK.S19E16.HDTV.x264-PLUTONiUM-BUYMORE
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Big.Brother.UK.S19E16.720p.HDTV.x264-PLUTONiUM-BUYMORE
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Big.Brother.UK.S19E16.1080p.HDTV.x264-PLUTONiUM-BUYMORE
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: SEAL.Team.S02E01.iNTERNAL.720p.WEB.x264-BAMBOOZLE-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: SEAL.Team.S02E01.1080p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E07.I.Want.You.To.Die.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E06.Two.Birds.One.Millstone.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Total.Divas.S08E03.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E05.Meet.Bonnie.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E04.Skanks.Get.Shanked.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E03.Its.Called.the.Octopus.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E02.Shes.Dying.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Survivor.S37E02.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S02E01.Its.Time.to.Move.On.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Survivor.S37E02.READNFO.720p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Purge.S01E05.HDTV.x264-CRAVERS-postbot
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Survivor.S37E02.READNFO.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Survivor.S37E02.1080p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Purge.S01E05.720p.HDTV.x264-CRAVERS-postbot
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lethal.Weapon.S03E02.HDTV.x264-CRAVERS-postbot
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lethal.Weapon.S03E02.720p.HDTV.x264-CRAVERS-postbot
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Watch.What.Happens.Live.2018.10.02.Kate.Chastain.and.Capt.Lee.Rosbach.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Shaun.Micallefs.Mad.As.Hell.S09E03.720p.HDTV.x264-CBFM-RakuvFIN-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Daily.Show.with.Trevor.Noah.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Greys.Anatomy.S15E03.HDTV.x264-KILLERS-postbot
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S01E15.Its.All.My.Fault.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Chicago.Fire.S07E02.Chicago.Med.S04E02.HDTV.x264-KILLERS-postbot
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: A.Million.Little.Things.S01E02.HDTV.x264-KILLERS-postbot
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: A.Million.Little.Things.S01E02.720p.HDTV.x264-KILLERS-postbot
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S01E14.The.Night.Lila.Died.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S01E13.Mamas.Here.Now.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lethal.Weapon.S03E02.720p.HDTV.x264-CRAVERS-Scrambled
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: A.Million.Little.Things.S01E02.720p.HDTV.x264-KILLERS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Greys.Anatomy.S15E03.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Daily.Show.with.Trevor.Noah.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.Extended.1080p.CC.WEB-DL.AAC2.0.x264-monkee
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S01E12.Shes.A.Murderer.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.EXTENDED.720p.WEB.x264-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: American.Horror.Story.S08E04.720p.WEBRip.x264-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking if found episode 8x4 is wanted at quality 720p WEB-DL
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: any,best = [1, 2, 4, 16, 32, 64, 128, 256, 32768] [] and found 32
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT status FROM tv_episodes WHERE showid = ? AND season = ? AND episode = ? with args [250487, 8, 4]
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Existing episode status: 3202 (Snatched (720p WEB-DL))
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Quality is on wanted list, need to check if it's better than existing quality
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Episode already exists and the found episode has same/lower quality, ignoring found episode
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: None of the conditions were met, ignoring found episode
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Skipping American.Horror.Story.S08E04.720p.WEBRip.x264-TBS-Obfuscated because we don't want an episode that's 720p WEB-DL
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: What.Lies.Beneath.S01E05.The.Devil.You.Know.720p.WEBRip.x264-CAFFEiNE-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S01E11.Best.Christmas.Ever.1080p.AMZN.WEBRip.DD5.1.x264.1-CasStudio-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: What.Lies.Beneath.S01E05.The.Devil.You.Know.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Greys.Anatomy.S15E03.720p.HDTV.x264-KILLERS-postbot
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Innocents.S01E06.INTERNAL.1080p.WEBRip.X264-DEFLATE-RakuvFIN-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Greenleaf.S03E06.720p.WEBRip.x264-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Greys.Anatomy.S15E03.720p.HDTV.x264-KILLERS-Scrambled
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Its.Always.Sunny.in.Philadelphia.S13E05.720p.WEBRip.x264-TBS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Survivor.S37E02.HDTV.x264-PLUTONiUM-postbot
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: South.Park.S22E02.720p.HDTV.x264-AVS-Scrambled
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking if found episode 22x2 is wanted at quality HD TV
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: any,best = [1, 2, 4, 16, 32, 64, 128, 256] [] and found 4
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT status FROM tv_episodes WHERE showid = ? AND season = ? AND episode = ? with args [75897, 22, 2]
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Existing episode status: 402 (Snatched (HD TV))
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Quality is on wanted list, need to check if it's better than existing quality
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Episode already exists and the found episode has same/lower quality, ignoring found episode
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: None of the conditions were met, ignoring found episode
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Skipping South.Park.S22E02.720p.HDTV.x264-AVS-Scrambled because we don't want an episode that's HD TV
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: South.Park.S22E02.720p.HDTV.x264-AVS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking if found episode 22x2 is wanted at quality HD TV
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: any,best = [1, 2, 4, 16, 32, 64, 128, 256] [] and found 4
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT status FROM tv_episodes WHERE showid = ? AND season = ? AND episode = ? with args [75897, 22, 2]
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Existing episode status: 402 (Snatched (HD TV))
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Quality is on wanted list, need to check if it's better than existing quality
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Episode already exists and the found episode has same/lower quality, ignoring found episode
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: None of the conditions were met, ignoring found episode
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Skipping South.Park.S22E02.720p.HDTV.x264-AVS-Obfuscated because we don't want an episode that's HD TV
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Single.Parents.S01E02.720p.HDTV.x264-KILLERS-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Modern.Family.S10E02.PROPER.720p.HDTV.x264-KILLERS-Scrambled
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Greenleaf.S03E06.720p.HEVC.x265-MeGusta-Obfuscated
2018-10-04 03:25:38 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Daily.Show.2018.10.03.Neil.deGrasse.Tyson.EXTENDED.1080p.WEB.x264.1-TBS-Obfuscated
2018-10-04 03:25:38 INFO     SEARCHQUEUE-RSS-SEARCH :: No needed episodes found on the RSS feeds
2018-10-04 03:29:57 INFO     MAIN :: Signal 15 caught, saving and exiting...
2018-10-04 03:29:57 INFO     MAIN :: Aborting all threads
2018-10-04 03:29:57 INFO     MAIN :: Waiting for the SEARCH thread to exit
2018-10-04 03:29:57 INFO     MAIN :: Waiting for the BACKLOG thread to exit
2018-10-04 03:29:58 INFO     MAIN :: Waiting for the SHOWUPDATER thread to exit
2018-10-04 03:29:58 INFO     MAIN :: Waiting for the VERSIONCHECKER thread to exit
2018-10-04 03:29:59 INFO     MAIN :: Waiting for the SHOWQUEUE thread to exit
2018-10-04 03:29:59 INFO     MAIN :: Waiting for the SEARCHQUEUE thread to exit
2018-10-04 03:29:59 INFO     MAIN :: Waiting for the POSTPROCESSER thread to exit
2018-10-04 03:30:00 INFO     MAIN :: Waiting for the PROPERFINDER thread to exit
2018-10-04 03:30:04 INFO     MAIN :: Saving all shows to the database
2018-10-04 03:30:04 DEBUG    MAIN :: 250487: Saving show info to database
2018-10-04 03:30:04 DEBUG    MAIN :: sickbeard.db: UPDATE tv_shows SET status = ?, air_by_date = ?, flatten_folders = ?, skip_notices = ?, network = ?, startyear = ?, show_name = ?, rls_require_words = ?, tvr_name = ?, paused = ?, airs = ?, location = ?, rls_ignore_words = ?, last_update_tvdb = ?, genre = ?, runtime = ?, quality = ?, tvr_id = ?, lang = ? WHERE tvdb_id = ? with args [u'Continuing', 0, 0, 0, u'FX (US)', 2011, u'American Horror Story', u'', u'', 0, u'Wednesday 10:00 PM', u'/downloads/completed/TV-Shows/American Horror Story', u'', 736971, u'|Drama|Horror|Thriller|', 0, 33271, 0, u'en', 250487]
